version: 0.2
phases: 
  install:
    runtime-versions:
        docker: 20    
    commands: 
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build: 
    commands: 
      - echo Logging in to Amazon ECR....
      - aws --version
      - $(aws ecr get-login --no-include-email --region ap-southeast-1)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=$ECR_REPO_URL
  build: 
    commands: 
      - echo Build started on `date`
      - echo Building the Docker image...
      # Build the Docker image with IMAGE_TAG
      - docker build -t $ECR_REPO_URL:$IMAGE_TAG .
      # Now tag the image as 'latest' using the IMAGE_TAG
      # - docker tag $ECR_REPO_URL:$IMAGE_TAG $ECR_REPO_URL:latest
  post_build: 
    commands: 
      - echo Build completed on `date`
      - echo Pushing to repository...
      # Push the image tagged with IMAGE_TAG to ECR
      - docker push $ECR_REPO_URL:$IMAGE_TAG
      # Push the image tagged as 'latest' to ECR
      - docker push $ECR_REPO_URL:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' $ECR_REPO_URL:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
